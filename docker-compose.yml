# docker-compose.yml
services:

  # ------------------------------------------------------------
  # Stalwart Mail Server
  # ------------------------------------------------------------
  stalwart:
    image: stalwartlabs/stalwart:latest
    container_name: stalwart
    restart: always
    networks:
      - hecate-net
    volumes:
      - stalwart_data:/opt/stalwart           # ⇦ mail config & queues
    ports:
      - "25:25"     # SMTP
      - "587:587"   # Submission (STARTTLS)
      - "465:465"   # Submission (implicit TLS)
      - "110:110"   # POP3
      - "995:995"   # POP3S
      - "143:143"   # IMAP
      - "993:993"   # IMAPS
      - "4190:4190" # Sieve
      - "8080:8080" # Admin/API HTTP (can be proxied via nginx)
      # - "8443:443" # Admin/API HTTPS – uncomment ONLY if you
                    #   want to expose Stalwart TLS directly.

  # ------------------------------------------------------------
  # Authentik stack
  # ------------------------------------------------------------
  postgres:
    image: postgres:16-alpine
    container_name: authentik-postgres
    restart: always
    env_file:    # optional: move these into .env if preferred
      - ./authentik.env
    environment:
      POSTGRES_USER: authentik
      POSTGRES_PASSWORD: authentik
      POSTGRES_DB: authentik
    volumes:
      - authentik_postgres:/var/lib/postgresql/data
    networks:
      - hecate-net

  redis:
    image: redis:alpine
    container_name: authentik-redis
    restart: always
    volumes:
      - authentik_redis:/data
    networks:
      - hecate-net

  authentik-server:
    image: ghcr.io/goauthentik/server:2024.4.0
    container_name: authentik-server
    depends_on:
      - postgres
      - redis
    restart: always
    command: server
    env_file:
      - ./authentik.env
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: authentik
      AUTHENTIK_POSTGRESQL__DB: authentik
      AUTHENTIK_SECRET_KEY: "change-me-very-secret"   # <-- replace
    volumes:
      - authentik_media:/media
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "9000:9000"   # Authentik UI / API (can be proxied)

    networks:
      - hecate-net

  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.4.0
    container_name: authentik-worker
    depends_on:
      - authentik-server
    restart: always
    command: worker
    env_file:
      - ./authentik.env
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgres
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: authentik
      AUTHENTIK_POSTGRESQL__DB: authentik
      AUTHENTIK_SECRET_KEY: "change-me-very-secret"
    volumes:
      - authentik_media:/media
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - hecate-net

  nginx:
    image: nginx
    container_name: hecate-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./assets/conf.d:/etc/nginx/conf.d:ro
      - ./assets/snippets:/etc/nginx/snippets:ro
      - ./certs:/etc/nginx/certs:ro
      - ./assets/error_pages:/usr/share/nginx/html:ro
      - ./logs:/var/log/nginx
    ports:
      #- "80:80"
      #- "443:443"
      ##############################################################
      # Uncomment below if needed:
      # - "1515:1515"   # Wazuh
      # - "1514:1514"
      # - "55000:55000"
      # - "25:25"       # Mailcow
      # - "587:587"
      # - "465:465"
      # - "110:110"
      # - "995:995"
      # - "143:143"
      # - "993:993"
      # - "50000:50000" # Jenkins
      ##############################################################
    restart: always
    networks:
      - hecate-net

  caddy:
    image: caddy:latest
    container_name: hecate-caddy
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro        # main Caddy configuration
      - ./certs:/data/caddy/certs                 # certificates (Caddy manages its own, but we provide overrides)
      - ./assets/error_pages:/usr/share/caddy:ro # error pages
      - ./logs/caddy:/var/log/caddy              # Caddy logs
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks:
      - hecate-net

  coturn:
    image: coturn/coturn
    container_name: hecate-coturn
    restart: always
    ports:
      - "3478:3478"
      - "3478:3478/udp"
      - "5349:5349"
      - "5349:5349/udp"
      - "49160-49200:49160-49200/udp"
    environment:
      DETECT_EXTERNAL_IP: "yes"
      DETECT_RELAY_IP: "yes"
      DETECT_EXTERNAL_IPV6: "yes"
      DETECT_RELAY_IPV6: "yes"
    volumes:
      - ./certs:/etc/coturn/certs:ro
    command: >
      turnserver
      --listening-port=3478
      --listening-ip=0.0.0.0
      --fingerprint
      --no-cli
      --min-port=49160
      --max-port=49200
      --log-file=/var/log/coturn.log
      --cert=/etc/coturn/certs/hecate.fullchain.pem
      --pkey=/etc/coturn/certs/hecate.privkey.pem
      --static-auth-secret=change_me
      --verbose
    networks:
      - hecate-net



# ------------------------------------------------------------
# Shared network and named volumes
# ------------------------------------------------------------
networks:
  hecate-net:

volumes:
  stalwart_data:
  kc-db-data:
  authentik_postgres:
  authentik_redis:
  authentik_media:
