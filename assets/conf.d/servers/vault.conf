#--------------------------------------------------
# VAULT: vault.${BASE_DOMAIN} (Vault)
#--------------------------------------------------

# Redirect HTTP â†’ HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name vault.${BASE_DOMAIN}; # Vault's FQDN

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name vault.${BASE_DOMAIN}; # Vault's FQDN

    # SSL certificates
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # Basic SSL config (adapt cipher suites, etc. to your needs)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5:!SHA1:!kRSA;
    ssl_prefer_server_ciphers on;

    # Increase buffer sizes (optional, for large responses)
    client_max_body_size 50M; # Adjust as needed
    proxy_buffer_size 128k;
    proxy_buffers 64 512k;
    proxy_busy_buffers_size 512k;

    # Prevent clickjacking
    proxy_hide_header X-Frame-Options;
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Include common security headers and error handling
    include /etc/nginx/snippets/security-headers.conf;
    include /etc/nginx/snippets/error-pages.conf;

    location / {
        # Forward requests to Vault on port 8179
        proxy_pass http://${BACKEND_IP}:8179;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size 0;
        proxy_buffer_size 128k;
        proxy_buffers 64 512k;
        proxy_busy_buffers_size 512k;
        proxy_hide_header X-Frame-Options; # Ensure upstream headers are hidden

        # Handle WebSocket connections (if needed by Vault UI)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
