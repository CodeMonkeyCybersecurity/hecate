#--------------------------------------------------
# MATTERMOST PAGE: collaborate.${BASE_DOMAIN}
#--------------------------------------------------
# --- Server block for HTTP (80) ---
server {
    listen 80;
    listen [::]:80;
    server_name collaborate.${BASE_DOMAIN};

    return 301 https://$host$request_uri; # Redirect everything else to HTTPS

}

# --- Server block for HTTPS (443) ---
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name collaborate.${BASE_DOMAIN};
    http2 on;

    # SSL certs if you're terminating TLS here
    ssl_certificate /etc/nginx/certs/collaborate.fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/collaborate.privkey.pem;

    # Recommended SSL/TLS config
    ssl_session_timeout 1d;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_early_data on;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:50m;
    # Enable error interception and define custom error page handling
    proxy_intercept_errors on;
    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /custom_error.html;

    # Serve the custom error page internally
    location = /custom_error.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Security headers  
    # Prevent clickjacking
    proxy_hide_header X-Frame-Options;
    add_header X-Frame-Options "SAMEORIGIN" always;

    #  Other headers (e.g., X-Content-Type-Options, Strict-Transport-Security) can be added here
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Enable OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Standard (HTTP) traffic
    location / {
        proxy_pass http://${BACKEND_IP}:8065;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size               0;
        proxy_set_header Connection         "";
        proxy_set_header X-Frame-Options    SAMEORIGIN;
        proxy_buffers                      256 16k;
        proxy_buffer_size                  16k;
        proxy_read_timeout                 600s;
        proxy_http_version                 1.1;
        proxy_hide_header X-Frame-Options; # Ensure that any X-Frame-Options header from upstream is hidden

    }

    # WebSocket (real-time) connections for Mattermost
    location ~ /api/v[0-9]+/(users/)?websocket$ {
        proxy_set_header Upgrade             $http_upgrade;
        proxy_set_header Connection          "upgrade";

        # Basic proxy settings
        client_max_body_size                0;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header X-Frame-Options    SAMEORIGIN;
        proxy_buffers                       256 16k;
        proxy_buffer_size                   16k;

        # Timeouts
        client_body_timeout                 60s;
        send_timeout                        300s;
        lingering_timeout                   5s;
        proxy_connect_timeout               90s;
        proxy_send_timeout                  300s;
        proxy_read_timeout                  90s;
        proxy_http_version                  1.1;

        proxy_pass http://${BACKEND_IP}:8065;
    }
}
