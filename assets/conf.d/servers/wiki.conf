#--------------------------------------------------
# WIKI_JS WEB UI: wiki.${BASE_DOMAIN}
#--------------------------------------------------

# Redirect HTTP â†’ HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name wiki.${BASE_DOMAIN}; # or _ for any host

    return 301 https://$host$request_uri;
}

# HTTPS  for Wiki.js
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name wiki.${BASE_DOMAIN};

    # SSL certificates
    ssl_certificate /etc/nginx/certs/wiki.fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/wiki.privkey.pem;

    # Increase buffer sizes (optional, for large responses)
    client_max_body_size 50M; # Adjust as needed
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Security headers    
    # Prevent clickjacking
    proxy_hide_header X-Frame-Options;
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Include common security headers and error handling
    include /etc/nginx/snippets/security-headers.conf;
    include /etc/nginx/snippets/error-pages.conf;

    # Proxy settings for Wiki.js
    location / {
        proxy_pass http://${BACKEND_IP}:11080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Frame-Options; # Ensure that any X-Frame-Options header from upstream is hidden

        # Handle WebSocket connections
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
