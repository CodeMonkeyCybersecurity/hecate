#--------------------------------------------------
# MINIO: persephone.${BASE_DOMAIN}
#--------------------------------------------------

# Redirect HTTP → HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name persephone.${BASE_DOMAIN}; # or _ for any host

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name persephone.${BASE_DOMAIN}; # or _ for any host

    # SSL certificates
    ssl_certificate /etc/nginx/certs/persephone.fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/persephone.privkey.pem;

    # Basic SSL config (adapt cipher suites, etc. to your needs)
    ssl_protocols        TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5:!SHA1:!kRSA;
    ssl_prefer_server_ciphers on;

    # Increase buffer sizes (optional, for large responses)
    client_max_body_size 0;                     # Allow any size file to be uploaded.
    proxy_buffering off;                        # To disable buffering
    proxy_request_buffering off;                # <-

    # Security headers
    # Prevent clickjacking
    proxy_hide_header X-Frame-Options;
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Include common security headers and error handling
    include /etc/nginx/snippets/security-headers.conf;
    include /etc/nginx/snippets/error-pages.conf;

    location / {
        proxy_pass http://${PERS_BACKEND_IP}:8123;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size 0;
        proxy_hide_header X-Frame-Options; # Ensure that any X-Frame-Options header from upstream is hidden

        # Handle WebSocket connections
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

#--------------------------------------------------
# MINIO API: persephoneapi.${BASE_DOMAIN}
#--------------------------------------------------

# Redirect HTTP → HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name persephoneapi.${BASE_DOMAIN}; # or _ for any host

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name persephoneapi.${BASE_DOMAIN}; # or _ for any host

    # SSL certificates
    ssl_certificate /etc/nginx/certs/persephoneapi.fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/persephoneapi.privkey.pem;

    # Basic SSL config (adapt cipher suites, etc. to your needs)
    ssl_protocols        TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5:!SHA1:!kRSA;
    ssl_prefer_server_ciphers on;

    # Increase buffer sizes (optional, for large responses)
    client_max_body_size 0;                     # Allow any size file to be uploaded.
    proxy_buffering off;                        # To disable buffering
    proxy_request_buffering off;                # <-

    # Security headers
    # Prevent clickjacking
    proxy_hide_header X-Frame-Options;
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Include common security headers and error handling
    include /etc/nginx/snippets/security-headers.conf;
    include /etc/nginx/snippets/error-pages.conf;

    location / {
        proxy_pass http://${PERS_BACKEND_IP}:9123;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_hide_header X-Frame-Options; # Ensure that any X-Frame-Options header from upstream is hidden
        client_max_body_size 0;

        # Handle WebSocket connections
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
